@page "/rol/crear"
@page "/rol/editar/{Id:int}"

<EditForm Model="@Rol" OnInvalidSubmit="Send">
    <h1>@Titulo</h1>
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
    <label>Nombre</label>
    <InputText class="form-control" @bind-Value="Rol.Nombre"></InputText>
    </div>
    <div class="form-group">
    <label for="ckbCrear">Crear</label>
    <InputCheckbox id="ckbCrear" @bind-Value="Rol.PermisoParaCrear"></InputCheckbox>
    
    </div>

    <div class="form-group">
    <label for="ckbEditar">Editar</label>
    <InputCheckbox id="ckbEditar" @bind-Value="Rol.PermisoParaEditar"></InputCheckbox>
    </div>

    <div class="form-group">
    <label for="ckbEliminar">Eliminar</label>
    <InputCheckbox id="ckbEliminar" @bind-Value="Rol.PermisoParaEliminar"></InputCheckbox>
    </div>
    <button @onclick="Send" type="submit" class="mt-2 btn btn-success">Ok</button>
</EditForm>
@code
{
[Parameter]
public int Id { get; set; } = 0;
public string Titulo => Id>0? "Editar Rol":"Crear Rol";

public UsuarioRolUpdateRequest Rol { get; set; } = new UsuarioRolUpdateRequest();

protected override async Task OnInitializedAsync()
        {
            
            if(Id !=0)
            {
                var resultado = await rolesManager.GetByIdAsync(Id);
                if(resultado.Succeeded){
                    Rol.Id = resultado.Data.Id;
                    Rol.Nombre = resultado.Data.Nombre;
                    Rol.PermisoParaCrear =  resultado.Data.PermisoParaCrear;
                    Rol.PermisoParaEditar = resultado.Data.PermisoParaEditar;
                    Rol.PermisoParaEliminar =resultado.Data.PermisoParaEliminar;
                    StateHasChanged();
                }
            }

        }

        
public async void Send()
{
    if(Titulo == "Editar Rol")
     {
            var updateRequest = new UsuarioRolUpdateRequest
    {
        Id = Id,   
                   /* Propiedades actualizadas del registro de rol */
    };

       var resultado = await rolesManager.UpdateAsync(Rol.Id, updateRequest);
        
        if(resultado.Succeeded) urlHelper.NavigateTo("/roles");
     }
      if(Titulo == "Crear Rol")
     {
        var resultado = await rolesManager.CreateAsync(Rol);
        
        if(resultado.Succeeded) urlHelper.NavigateTo("/roles");
     }
     
     
}


}

